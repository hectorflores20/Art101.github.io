  <body>

  <script src="http://threejsplaygnd.brangerbriz.net/js/three.min.js"></script>
  <script src="http://threejsplaygnd.brangerbriz.net/js/Detector.js"></script>
  <script>

    if ( ! Detector.webgl ) Detector.addGetWebGLMessage();

    var camera, scene, renderer;
    var geometry, material, mesh;

    function setup() {

      var W = window.innerWidth, H = window.innerHeight;
      renderer = new THREE.WebGLRenderer();
      renderer.setSize( W, H );
      document.body.appendChild( renderer.domElement );

      camera = new THREE.PerspectiveCamera( 50, W/H, 1, 10000 );
      camera.position.z = 500;

      scene = new THREE.Scene();


      // paste your code from the geometryGUI here
map = THREE.ImageUtils.loadTexture('../texturez/water.jpg');
geometry = new THREE.OctahedronGeometry(150, 0);
material = new THREE.MeshBasicMaterial({shading: THREE.FlatShading, color: 0xf2abab, map: map, transparent: true, opacity: 0.64});
mesh = new THREE.Mesh(geometry, material);
map.wrapS = map.wrapT = THREE.RepeatWrapping;
map.repeat.set( 1, 1 );
scene.add(mesh);


    }

    function draw() {

      requestAnimationFrame( draw );

      // experiment with code from the snippets menu here
mesh.rotation.x = Date.now() * 0.0005;
      mesh.rotation.y = Date.now() * 0.0002;
      mesh.rotation.z = Date.now() * 0.001;
geometry = new THREE.Geometry();
      for ( i = 0; i < 500; i ++ ) {
        var vertex = new THREE.Vector3();
        vertex.x = 1000 * Math.random() - 500;
        vertex.y = 1000 * Math.random() - 500;
        vertex.z = 1000 * Math.random() - 500;
        geometry.vertices.push( vertex );
      }
      material = new THREE.ParticleBasicMaterial( { size: 3, sizeAttenuation: true, transparent: false } );
      material.color.setHex( 0xff00ff );
      particles = new THREE.ParticleSystem( geometry, material );
      particles.sortParticles = true;
      scene.add( particles );
      renderer.render( scene, camera );
particles.rotation.y = Date.now() * 0.00005;
var time = Date.now() * 0.0005;
      h = ( 360 * ( 1.0 + time ) % 360 ) / 360;
      material.color.setHSL( h, 0.5, 0.5 );
camera.position.x = Math.sin( Date.now() * 0.002 ) * 50;
mesh.position.y = Math.sin( Date.now() * 0.002 ) * 300;
    }

    setup();
    draw();

  </script>
  <body>
